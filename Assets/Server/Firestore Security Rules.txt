rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {  
    match /global/{documentId} {
    	allow read: if true;
      allow write: if false;
    }
    
    match /accounts/{documentId} {
    	allow read: if
      	request.auth.token.userId == documentId;
      allow create: if
      	request.auth.token.userId == documentId &&
        incomingData().hasChanged == false;
      allow update: if
      	((request.auth.token.userId == documentId && incomingData().hasChanged == false) ||
        (request.auth.token.userId != documentId && incomingData().hasChanged == true));
      allow delete: if false;
    }
    
    function isNotUpdating(field) {
			return
    		!(field in incomingData()) ||
  			existingData()[field] == incomingData()[field];
		}
    
    function existingData() {
    	return resource.data;
    }
    
    function incomingData() {
    	return request.resource.data;
    }
    
    function isValidTimestamp(field) {
    	return
      	incomingData()[field] is timestamp &&
        incomingData()[field] < request.time;
    }
  	
  	function isValidString(field, minLength, maxLength) {
  		return
    		incomingData()[field] is string &&
    		incomingData()[field].size() >= minLength &&
    	  incomingData()[field].size() <= maxLength;
  	}
  }
}

